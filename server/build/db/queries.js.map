{"version":3,"sources":["../../src/db/queries.js"],"names":["getChannelByName","name","query","aql","DB","channels","length","undefined","getPostsByChannel","channelName","channel","_key","hasChannel","getUserByName","users","console","log","hasUser","username","user","retval"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAEsBA,gB;;;;;;;0BAAf,iBAAgCC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,KADD,OACSC,aADT,qBAGwBF,IAHxB;AAAA;AAAA,mBAMkBG,eAAGF,KAAH,CAASA,KAAT,CANlB;;AAAA;AAMCG,YAAAA,QAND;AAAA,6CAOEA,QAAQ,CAACC,MAAT,GAAkB,CAAlB,GAAsBD,QAAQ,CAAC,CAAD,CAA9B,GAAoCE,SAPtC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAUeC,iB;;;;;;;0BAAf,kBAAiCC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBT,gBAAgB,CAACS,WAAD,CADjC;;AAAA;AACCC,YAAAA,OADD;;AAAA,gBAEAA,OAFA;AAAA;AAAA;AAAA;;AAAA,8CAGI,EAHJ;;AAAA;AAMCR,YAAAA,KAND,OAMSC,aANT,sBAQsBO,OAAO,CAACC,IAR9B;AAAA,8CAeEP,eAAGF,KAAH,CAASA,KAAT,CAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkBeU,U;;;;;;;0BAAf,kBAA0BX,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkBD,gBAAgB,CAACC,IAAD,CADlC;;AAAA;AACCI,YAAAA,QADD;AAAA,8CAEEA,QAAQ,KAAKE,SAFf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeM,a;;;;;;;0BAAf,kBAA6BZ,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,KADD,OACSC,aADT,sBAGyBF,IAHzB;AAAA;AAAA,mBAMeG,eAAGF,KAAH,CAASA,KAAT,CANf;;AAAA;AAMCY,YAAAA,KAND;AAOLC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBf,IAArB,EAA2Ba,KAA3B;AAPK,8CAQEA,KAAK,CAACR,MAAN,GAAe,CAAf,GAAmBQ,KAAK,CAAC,CAAD,CAAxB,GAA8BP,SARhC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAWeU,O;;;;;;;0BAAf,kBAAuBC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcL,aAAa,CAACK,QAAD,CAD3B;;AAAA;AACCC,YAAAA,IADD;AAELJ,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,IAApB,EAA0BD,QAA1B;AACME,YAAAA,MAHD,GAGUD,IAAI,KAAKZ,SAHnB;AAILQ,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,MAAtB,EAA8BF,QAA9B;AAJK,8CAKEE,MALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import DB from './index';\nimport { aql } from 'arangojs';\n\nexport async function getChannelByName(name) {\n  const query = aql`\n      FOR channel IN channels\n      FILTER channel.name == ${name}\n      RETURN channel\n    `;\n  const channels = await DB.query(query);\n  return channels.length > 0 ? channels[0] : undefined;\n}\n\nexport async function getPostsByChannel(channelName) {\n  const channel = await getChannelByName(channelName);\n  if (!channel) {\n    return [];\n  }\n\n  const query = aql`\n    FOR p IN posts\n    FILTER p.channelKey == ${channel._key}\n    SORT p.created\n    FOR u in users\n        FILTER p.author == u._key\n        RETURN { \"id\": p._id, \"username\": u.username, \"message\": p.body }\n    `;\n\n  return DB.query(query);\n}\n\nexport async function hasChannel(name) {\n  const channels = await getChannelByName(name);\n  return channels !== undefined;\n}\n\nexport async function getUserByName(name) {\n  const query = aql`\n      FOR user IN users\n      FILTER user.username == ${name}\n      RETURN user\n    `;\n  const users = await DB.query(query);\n  console.log('users', name, users);\n  return users.length > 0 ? users[0] : undefined;\n}\n\nexport async function hasUser(username) {\n  const user = await getUserByName(username);\n  console.log('user', user, username);\n  const retval = user !== undefined;\n  console.log('retval', retval, username);\n  return retval;\n}\n"],"file":"queries.js"}